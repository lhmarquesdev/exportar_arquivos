version: '3.8'

services:
  app:
    build: .
    container_name: app_backend
    expose:
      - "5000"  # Expor a porta interna do contêiner (não mapeada diretamente para a máquina host)
    volumes:
      - .:/app
    restart: always
    command: python app.py  # Certifique-se de que o comando está correto para iniciar seu app
    environment:
      - FLASK_ENV=production  # Configurar o ambiente Flask (opcional, mas útil em produção)
    networks:
      - app-network  # Definir a rede personalizada para comunicação entre contêineres

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "80:80"  # Mapeando a porta 80 para o domínio
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Configuração do Nginx
    depends_on:
      - app  # Garante que o Nginx espere o app estar pronto
    restart: always
    networks:
      - app-network  # A mesma rede do contêiner app para facilitar a comunicação

networks:
  app-network:
    driver: bridge  # Usar o driver padrão de rede bridge para comunicação entre os contêineres
